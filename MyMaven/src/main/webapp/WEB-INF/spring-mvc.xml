<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.css">

	</context:component-scan>
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="redisClient" class="com.css.framework.RedisClient">
		<property name="poolConfig">
			<ref local="poolConfigRedis"></ref>
		</property>
		<property name="host" value="127.0.0.1"></property>
		<property name="port" value="6379"></property>
	</bean>
	<bean id="poolConfigRedis" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="256"></property>
		<property name="maxIdle" value="64"></property>
		<property name="maxWaitMillis" value="5000"></property>
		<property name="testOnBorrow" value="false"></property>
		<property name="testOnReturn" value="false"></property>
	</bean>


	<bean id="poolConfigCodis" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="2048"></property>
		<property name="maxIdle" value="400"></property>
		<property name="maxWaitMillis" value="9000"></property>
		<property name="testOnBorrow" value="false"></property>
		<property name="testOnReturn" value="false"></property>
	</bean>

	<bean id="codisClient" class="com.css.framework.CodisClient">
		<property name="host"
			value="192.168.254.128:2181,192.168.254.128:2182,192.168.254.128:2183"></property>
		<property name="timeout" value="60000"></property>
		<property name="zkProxyDir" value="/zk/codis/db_ECS/proxy"></property>
		<property name="poolConfig" ref="poolConfigCodis"></property>
	</bean>

	<!-- 缓存配置service -->
	<bean id="codisDemoService" class="com.css.service.impl.CodisDemoService">
		<property name="client" ref="codisClient"></property>
	</bean>
	<bean id="codisController" class="com.css.controller.CodisController">
		<property name="codisDemoService" ref="codisDemoService"></property>
	</bean>
	
</beans>